# Syntax
  expr      : KEYWORD:VAR IDENTIFIER EQ expr
            : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

  arith-expr : term ((PLUS|MINUS) term)*



  term      : factor((MUL|DIV) factor)*

  factor    : INT|FLOAT
            : (PLUS|MINUS) factor
            : LPAREN expr RPAREN

  POWEROP   : atom (POWEROP factor)*



  atom      : INT|FLOAT|IDENTIFIER
            : LPAREN expr RPAREN


# Libraries
  This will contain all Libraries currently available

# Current Bugs

# FOLLOW ALONG

1. Creating Lexer Class - A Lexer iterates a given string and splits it up into tokens
    going over each give string and break it up into tokens
    Token has a type and value

    run() function is used kick-off the programm 

    __init__() function is used to assign values to object properties, or other operations that are necessary to do when the object is being created. __init__ function is always executed when
    the class is called

    advance() function. This function is used to iterate through a given string

    make_tokens() This function is where all the Tokens are defined

    make_num() This function can identify a integer or float. This is done weather or not a '.' is found in the string

2. Position Class
    advance() unction. This function is used to iterate through a given string

3. Error Class
    This class handles all of the errors. Two types of errors as string and Illegal char

4. Parser - Syntax tree

5. Token Class
    __init__() function This is only used to initiate type_ and value these are going to be used later in this class and function

